[profile.default]

src = 'src'
test = 'test'
libs = ['lib']

out = 'build'
cache_path = 'cache'

via_ir = true
optimizer = true
optimizer_runs = 1000000
gas_reports = []

auto_detect_remappings = true
remappings = [
    'openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/',
]

[fuzz]
runs = 4096

[invariant]
runs = 512                 # The number of runs for each invariant test.
depth = 50                 # The number of calls executed to attempt to break invariants in one run.
fail_on_revert = true      # Fails the invariant test if a revert occurs.
call_override = false      # Allows overriding an unsafe external call when running invariant tests, e.g. reentrancy checks (this feature is still a WIP).
dictionary_weight = 75     # Use values collected from your contracts 75% of the time, random 25% of the time.
include_storage = true     # Collect values from contract storage and add them to the dictionary.
include_push_bytes = true  # Collect PUSH bytes from the contract code and add them to the dictionary.

[rpc_endpoints]
mainnet = "${RPC_URL_MAINNET}"
goerli = "${RPC_URL_GOERLI}"
optimism = "${RPC_URL_OPTIMISM}"

[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
goerli = { key = "${ETHERSCAN_API_KEY}" }
optimism = { key = "${ETHERSCAN_API_KEY_OPTIMISM}" }
